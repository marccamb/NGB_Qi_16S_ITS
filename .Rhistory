"Abundant ASVs, bacteria",
"Abundant ASVs, fungi",
"All ASVs, bacteria + fungi",
"All ASVs, bacteria",
"All ASVs, fungi"),
cex = 0.7)
legend("left", pch=16, col=hue,bty = "n",
legend=c("ASV", "Genus", "Family", "Class", "Order"),
cex = 0.7)
}
default.legend=T
if (default.legend=T) {
legend("topleft", pch=pch, col=1, bty = "n",
legend=c("Abundant ASVs, bacteria + fungi",
"Abundant ASVs, bacteria",
"Abundant ASVs, fungi",
"All ASVs, bacteria + fungi",
"All ASVs, bacteria",
"All ASVs, fungi"),
cex = 0.7)
legend("left", pch=16, col=hue,bty = "n",
legend=c("ASV", "Genus", "Family", "Class", "Order"),
cex = 0.7)
}
if (default.legend=T) {
legend("topleft", pch=pch, col=1, bty = "n",
legend=c("Abundant ASVs, bacteria + fungi",
"Abundant ASVs, bacteria",
"Abundant ASVs, fungi",
"All ASVs, bacteria + fungi",
"All ASVs, bacteria",
"All ASVs, fungi"),
cex = 0.7)
legend("left", pch=16, col=hue,bty = "n",
legend=c("ASV", "Genus", "Family", "Class", "Order"),
cex = 0.7)
}
# Drawing an empty plot
plot(if (is.null(xlim)) c(0,1) else xlim,
if (is.null(ylim)) c(0,1) else ylim,
type="n", xlab="Mean precision", ylab="Mean sensitivity")
res_err_rate <- res_err_rate_sd <- NULL
mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
# res_err_rate <- c(res_err_rate, min(d[[i]]$err_mean))
# res_err_rate_sd <- c(res_err_rate_sd, min(d[[i]]$err_sd))
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
}, foo, pch)
if (default.legend=T) {
legend("topleft", pch=pch, col=1, bty = "n",
legend=c("Abundant ASVs, bacteria + fungi",
"Abundant ASVs, bacteria",
"Abundant ASVs, fungi",
"All ASVs, bacteria + fungi",
"All ASVs, bacteria",
"All ASVs, fungi"),
cex = 0.7)
legend("left", pch=16, col=hue,bty = "n",
legend=c("ASV", "Genus", "Family", "Class", "Order"),
cex = 0.7)
}
legend("topleft", pch=pch, col=1, bty = "n",
legend=c("Abundant ASVs, bacteria + fungi",
"Abundant ASVs, bacteria",
"Abundant ASVs, fungi",
"All ASVs, bacteria + fungi",
"All ASVs, bacteria",
"All ASVs, fungi"),
cex = 0.7)
legend("left", pch=16, col=hue,bty = "n",
legend=c("ASV", "Genus", "Family", "Class", "Order"),
cex = 0.7)
if (default.legend) {
legend("topleft", pch=pch, col=1, bty = "n",
legend=c("Abundant ASVs, bacteria + fungi",
"Abundant ASVs, bacteria",
"Abundant ASVs, fungi",
"All ASVs, bacteria + fungi",
"All ASVs, bacteria",
"All ASVs, fungi"),
cex = 0.7)
legend("left", pch=16, col=hue,bty = "n",
legend=c("ASV", "Genus", "Family", "Class", "Order"),
cex = 0.7)
}
mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(x.min[c("error_mean", "error_sd")])
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
}, foo, pch)
err <- mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(x.min[c("error_mean", "error_sd")])
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
}, foo, pch)
err
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
x.min[c("error_mean", "error_sd")]
}, d)
err <- mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
x.min[c("error_mean", "error_sd")]
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
}, foo, pch)
err
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(x.min)
}, d)
err <- mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(x.min)
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
return(x.min)
}, foo, pch)
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(x.min)
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
return(err)
}, foo, pch)
err
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(c(x.min["error_mean"], x.min["error_sd"]))
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
return(err)
}, foo, pch)
err
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(c("mean"=x.min["error_mean"], "sd"=x.min["error_sd"]))
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
return(err)
}, foo, pch)
err
class(res)
class(err)
names(err)
colnames(err)
colnames(err) <- paste("tab", 1:6)
err
# Drawing an empty plot
plot(if (is.null(xlim)) c(0,1) else xlim,
if (is.null(ylim)) c(0,1) else ylim,
type="n", xlab="Mean precision", ylab="Mean sensitivity")
res_err_rate <- res_err_rate_sd <- NULL
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(c("mean"=x.min["error_mean"], "sd"=x.min["error_sd"]))
}, d)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
return(err)
}, foo, pch)
# Drawing an empty plot
plot(if (is.null(xlim)) c(0,1) else xlim,
if (is.null(ylim)) c(0,1) else ylim,
type="n", xlab="Mean precision", ylab="Mean sensitivity")
res_err_rate <- res_err_rate_sd <- NULL
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(c("mean"=x.min["error_mean"], "sd"=x.min["error_sd"]))
}, d)
}, foo, pch)
# Drawing an empty plot
plot(if (is.null(xlim)) c(0,1) else xlim,
if (is.null(ylim)) c(0,1) else ylim,
type="n", xlab="Mean precision", ylab="Mean sensitivity")
res_err_rate <- res_err_rate_sd <- NULL
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(c("mean"=x.min["error_mean"], "sd"=x.min["error_sd"]))
}, d)
}, foo, pch)
# Points the minimum error rate for each taxo level and dataset
err <- mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
},foo)
# Points the minimum error rate for each taxo level and dataset
err <- mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
},foo, pch)
# Drawing an empty plot
plot(if (is.null(xlim)) c(0,1) else xlim,
if (is.null(ylim)) c(0,1) else ylim,
type="n", xlab="Mean precision", ylab="Mean sensitivity")
res_err_rate <- res_err_rate_sd <- NULL
err <- mapply(function(files, points.type) {
d <- readRDS(files)
err <- mapply(function(x, col) {
points(sensitivity_mean~precision_mean,
pch=points.type,
col=adjustcolor("lightgray", alpha.f = 0.3),
data=x[-which.min(x[,"error_mean"]),])
x.min <- x[which.min(x[,"error_mean"]),]
segments(x.min["precision_mean"] - x.min["precision_sd"],
x.min["sensitivity_mean"],
x.min["precision_mean"] + x.min["precision_sd"],
x.min["sensitivity_mean"],
col=adjustcolor("gray", alpha.f = 0.4))
segments(x.min["precision_mean"],
x.min["sensitivity_mean"] - x.min["sensitivity_sd"],
x.min["precision_mean"],
x.min["sensitivity_mean"] + x.min["sensitivity_sd"],
col=adjustcolor("gray", alpha.f = 0.4))
return(list("mean"=x.min["error_mean"], "sd"=x.min["error_sd"]))
}, d)
}, foo, pch)
# Points the minimum error rate for each taxo level and dataset
mapply(function(files, points.type) {
d <- readRDS(files)
mapply(function(x, col){
x.min <- x[which.min(x[,"error_mean"]),]
points(x.min["sensitivity_mean"]~x.min["precision_mean"], cex=2,
pch=points.type, bg="white",
col=col)
}, d, hue)
},foo, pch)
err
foo <- list.files(pattern = "rf_irr.*_mtry_20_nfold_5_taxo_(16S|ITS).*\\.RDS", full.names = T,
path = "~/Documents/Postdoc_Biogeco/1_NGB/exploratory/Qi/NGB_Qi_16S_ITS_analysis_v2")
devtools::load_all(".")
devtools::load_all(".")
plot.rf.opti(foo)
err <- plot.rf.opti(foo)
devtools::load_all(".")
err <- plot.rf.opti(foo, )
err <- plot.rf.opti(foo, default.legend = T)
err <- plot.rf.opti(foo, default.legend = T)
devtools::load_all(".")
err <- plot.rf.opti(foo, default.legend = T)
err <- plot.rf.opti(foo, xlim=c(0.6,1), ylim=c(0.6,1), default.legend = T)
?plot
?plot
?points
?segments
?pdf
?adjustcolor
library(optiranger)
library(optiranger)
library(optiranger)
library(optiranger)
